<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Cart</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.0.0/mdb.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>

  <nav class="navbar navbar-expand-lg navbar-light bg-body-tertiary sticky-top">
    <!-- Container wrapper -->
    <div class="container">
      <!-- Navbar brand -->
      <a class="navbar-brand me-2" href="/">
        <span class="text-primary fs-3 fw-semibold">E-Commerce</span>
      </a>

      <!-- Toggle button -->
      <button data-mdb-collapse-init class="navbar-toggler" type="button" data-mdb-target="#navbarButtonsExample" aria-controls="navbarButtonsExample" aria-expanded="false" aria-label="Toggle navigation">
        <i class="fas fa-bars"></i>
      </button>

      <!-- Collapsible wrapper -->
      <div class="collapse navbar-collapse" id="navbarButtonsExample">
        <!-- Centered search bar -->
        <div class="d-flex mx-auto">
          <!-- <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
          <button class="btn btn-outline-primary" type="submit">Search</button> -->
        </div>
        <!-- Centered search bar -->

        <div class="d-flex align-items-center">

          <% if(isAuthenticated) { %>
          <div class="container-fluid">
            <ul class="navbar-nav">
              <!-- Icons -->


              <!-- Icon dropdown -->
              <li class="nav-item dropdown">
                <a href="#" class="nav-link dropdown-toggle" id="adminDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                  <img src="<%= user.profilePicture ? user.profilePicture : '/uploads/user/default-profile.jpg' %>" class="rounded-circle" height="25" width="25" alt="User Profile" loading="lazy" />
                  <span class="ms-1"><%= user.name %></span>
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="adminDropdown">
                  <li><a class="dropdown-item" href="/">Home</a></li>
                  <li><a class="dropdown-item" href="/order/userOrders">Orders</a></li>
                  <li><a class="dropdown-item" href="/profile">Profile</a></li>
                  <li><a class="dropdown-item" href="/auth/logout">Logout</a></li>
                </ul>
              </li>

              <!-- Avatar -->
              <!-- <li class="nav-item dropdown">
                <a href="/profile" class="nav-link d-flex align-items-center" role="button">
                  <img src="../..<%= user.profilePicture %>" class="rounded-circle" height="25" width="25" alt="Portrait of a Woman" loading="lazy" />
                  <span class="ms-1"><%= user.name %></span>
                </a>
              </li> -->

            </ul>
          </div>
          <% } else { %>
          <button data-mdb-ripple-init type="button" class="btn btn-outline-primary px-3 me-2" onclick="window.location.href='/auth/login'">
            Login
          </button>
          <button data-mdb-ripple-init type="button" class="btn btn-primary" onclick="window.location.href='/auth/signup'">
            Sign up for free
          </button>
          <% } %>
        </div>
      </div>
      <!-- Collapsible wrapper -->
    </div>
    <!-- Container wrapper -->
  </nav>

  <div class="container my-5">
    <div class="row align-items-center">

      <% if(cart.length > 0) { %>

      <div class="col-md-6 mb-4">
        <h2 class="text-center text-primary display-1 fw-semibold">CART ITEMS</h2>
      </div>
      <div class="col-md-6 mb-4 text-center">
        <div class="d-flex justify-content-center fs-5">
          <div class="">Total Price: </div>
          <div class="ms-2" id="totalPrice">$0.00</div>
        </div>
        <div class="me-3 fs-4 text-uppercase text-success">Click Here to Confirm Order</div>
        <button class="btn btn-success" onclick="payment()">Place Order</button>
      </div>

      <% cart.forEach((product) => { %>
      <div class="col-md-4 mb-4" id='product-<%= product.productId._id %>'>
        <div class="card p-3">
          <div class="bg-image hover-overlay text-center" data-mdb-ripple-init data-mdb-ripple-color="light">
            <img src="<%= product.productId.imageUrl %>" height="300px" class="" alt="<%= product.productId.name %>" />
            <a class="pointer" data-bs-toggle="modal" data-bs-target="#exampleModal-<%= product.productId._id %>">
              <div class="mask" style="background-color: rgba(251, 251, 251, 0.15);"></div>
            </a>
          </div>
          <div class="card-body">
            <h5 class="card-title"><%= product.productId.name %></h5>
            <p class="card-text"><%= product.productId.description %></p>
            <p class="card-text"><strong>Price:</strong> $<span class="productPrice productPrice-<%= product.productId._id %>"><%= product.productId.price %></span></p>
            <p class="card-text"><strong>Quantity:</strong>
              <span class="productQuan productQuan-<%= product.productId._id %>"><%= product.quantity %></span>
            </p>
          </div>
          <div class="card-footer d-flex justify-content-between align-content-center pt-4">
            <div>
              <button class="btn btn-danger" onclick="handleRemove('<%= product.productId.id %>')">Remove</button>
            </div>
            <div>
              <button class="btn btn-primary p-0" onclick="handleAdd('<%= product.productId.id %>')"><span class="m-0 fw-bold fs-4 px-3">+</span></button>
              <button class="btn btn-primary p-0" onclick="handleSub('<%= product.productId.id %>')"><span class="m-0 fw-bold fs-4 px-3">–</span></button>
            </div>
          </div>
        </div>
      </div>

      <!-- Modal for each product -->
      <div class=" modal fade" id="exampleModal-<%= product.productId._id %>" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered mt-0">
          <div class="modal-content mb-5">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel"><%= product.productId.name %></h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="container">
                <div class="row">
                  <div class="col-md-6">
                    <img src="<%= product.productId.imageUrl %>" class="img-fluid" alt="<%= product.productId.name %>">
                  </div>
                  <div class="col-md-6">
                    <p><%= product.productId.description %></p>
                    <p><strong>Price:</strong> $<span class="productPrice productPrice-<%= product.productId._id %>"><%= product.productId.price %></span></p>
                    <p class="card-text"><strong>Quantity:</strong>
                      <span class="productQuan productQuan-<%= product.productId._id %>"><%= product.quantity %></span>
                    </p>
                  </div>
                </div>
              </div>

            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <div class="mx-5">
                <button class="btn btn-primary p-0" onclick="handleAdd('<%= product.productId.id %>')"><span class="m-0 fw-bold fs-4 px-3">+</span></button>
                <button class="btn btn-primary p-0" onclick="handleSub('<%= product.productId.id %>')"><span class="m-0 fw-bold fs-4 px-3">–</span></button>
              </div>
              <div>
                <button class="btn btn-danger" onclick="handleRemove('<%= product.productId.id %>')">Remove</button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% }); %>

      <% } else { %>
      <h2 class="text-center text-primary display-1 fw-semibold">CART IS EMPTY</h2>
      <% } %>

    </div>
  </div>

  <div class="toast-container position-fixed top-0 end-0 mt-5 me-3">
    <div id="alertToast" class="toast hide fs-5" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-body" id="toastBody"></div>
    </div>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/7.0.0/mdb.umd.min.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <script>
    // Function to show toast
    function showToast(message, type = 'success') {
      const toastBody = document.getElementById('toastBody');

      toastBody.textContent = message;

      if (type === 'success') {
        toastBody.classList.add('bg-success', 'text-white');
      } else {
        toastBody.classList.add('bg-danger', 'text-white');
      }

      const toastElement = document.getElementById('alertToast');
      const toast = new bootstrap.Toast(toastElement);
      toast.show();
    }

    // Function to show loading toast
    function showLoadingToast() {
      const toastBody = document.getElementById('toastBody');
      toastBody.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Please wait...';

      toastBody.classList.remove('bg-danger', 'bg-success', 'text-white');

      const toastElement = document.getElementById('alertToast');
      const toast = new bootstrap.Toast(toastElement);
      toast.show();
    }


    let totalPrice = 0;
    // Calculate total price
    function calculateTotalPrice() {
      totalPrice = 0
      // Loop through each product in the cart and calculate the total price
      document.querySelectorAll('.card').forEach(card => {
        const price = parseFloat(card.querySelector('.productPrice').textContent); // Get price
        const quantity = parseInt(card.querySelector('.productQuan').textContent); // Get quantity
        totalPrice += price * quantity;
      });

      // Update the total price in the DOM
      document.getElementById('totalPrice').textContent = `$${totalPrice.toFixed(2)}`;
    }

    // Call the function when the page loads to calculate the initial total price
    document.addEventListener('DOMContentLoaded', () => {
      calculateTotalPrice();
    });

    function handleRemove(productId) {
      showLoadingToast();
      fetch('/cart/remove', {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId: productId,
          }),
        })
        .then(response => response.json())
        .then(data => {

          if (data.message === 'Product removed from cart') {
            showToast(data.message, 'success');
            document.getElementById(`product-${productId}`).remove();
            const modalElement = document.getElementById(`exampleModal-${productId}`);
            const modalInstance = bootstrap.Modal.getInstance(modalElement);
            if (modalInstance) {
              modalInstance.hide();
            }
            calculateTotalPrice();
          } else {
            showToast(data.message, 'danger');
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          showToast('Something Went Wrong', 'danger');
        });
    }

    function handleAdd(productId) {
      showLoadingToast();
      fetch('/cart/update', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId: productId,
            update: 'increment',
          }),
        })
        .then(response => response.json())
        .then(data => {
          showToast(data.message, 'success');
          if (data.message === 'Quantity updated') {
            document.getElementsByClassName(`productQuan-${productId}`)[0].textContent = parseInt(document.getElementsByClassName(`productQuan-${productId}`)[0].textContent) + 1;
            document.getElementsByClassName(`productQuan-${productId}`)[1].textContent = parseInt(document.getElementsByClassName(`productQuan-${productId}`)[1].textContent) + 1;

            calculateTotalPrice();
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          showToast('Something Went Wrong', 'danger');
        });
    }

    function handleSub(productId) {
      showLoadingToast();
      fetch('/cart/update', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            productId: productId,
            update: 'decrement',
          }),
        })
        .then(response => response.json())
        .then(data => {
          showToast(data.message, 'success');
          if (data.message === 'Quantity updated') {
            document.getElementsByClassName(`productQuan-${productId}`)[0].textContent = parseInt(document.getElementsByClassName(`productQuan-${productId}`)[0].textContent) - 1;
            document.getElementsByClassName(`productQuan-${productId}`)[1].textContent = parseInt(document.getElementsByClassName(`productQuan-${productId}`)[1].textContent) - 1;

            calculateTotalPrice();
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          showToast('Something Went Wrong', 'danger');
        });
    }

    function placeOrder() {
      showLoadingToast();
      fetch('/order/createOrder', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.message === 'Order placed successfully') {
            showToast('Order placed successfully!', 'success');

            setTimeout(() => {
              window.location.href = '/order/userOrders';
            }, 3000);
          } else {
            showToast(data.message, 'danger');
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          showToast('Something Went Wrong', 'danger');
        });
    }

    function payment() {
      const amount = Math.round(totalPrice * 100 * 100) / 100;

      var options = {
        "key": "rzp_test_PpkeCXpchzaCf6",
        "amount": amount,
        "currency": "USD",
        "name": "Payment Gateway by Razorpay",
        "description": "Test Transaction",
        "image": "https://example.com/your_logo",
        "razorpay_payment_id": "pay_29QQoUBi66xm2f",
        "razorpay_order_id": "order_9A33XWu170gUtm",
        "razorpay_signature": "9ef4dffbfd84f1318f6739a3ce19f9d85851857ae648f114332d8401e0949a3d",
        "handler": function(response) {
          showToast('Payment Successful', 'success');
          placeOrder();
          // alert(response.razorpay_payment_id);
          // alert(response.razorpay_order_id);
          // alert(response.razorpay_signature);
          // console.log(response);
        },
        "prefill": {
          "name": "E-Commerce",
          "email": "demo@demo.com",
          "contact": "+919000090000"
        },
        "notes": {
          "address": "Razorpay Corporate Office"
        },
        "theme": {
          "color": "#3399cc"
        }
      };
      var rzp1 = new Razorpay(options);
      rzp1.on('payment.failed', function(response) {
        showToast(response.error.description, 'danger');
        console.error('Payment failed:', response);
      });

      rzp1.open();
      return false;
    };
  </script>
</body>

</html>
